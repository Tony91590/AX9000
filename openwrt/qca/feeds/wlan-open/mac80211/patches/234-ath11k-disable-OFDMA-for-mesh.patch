From caec38bcd6635ccdd7d5ca527c7ca6dd67af6141 Mon Sep 17 00:00:00 2001
From: Anilkumar Kolli <akolli@codeaurora.org>
Date: Tue, 22 Dec 2020 17:18:13 +0530
Subject: [PATCH] ath11k: disable OFDMA for mesh

OFDMA is not supported on mesh, for mesh remove sending wmi
pdev cmd to enable OFDMA.

Signed-off-by: Anilkumar Kolli <akolli@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/mac.c      | 59 ++++++++++++++++++------------
 ipkg-ipq/kmod-ath/CONTROL/control          |  2 +-
 ipkg-ipq/kmod-ath10k/CONTROL/control       |  2 +-
 ipkg-ipq/kmod-ath11k/CONTROL/control       |  2 +-
 ipkg-ipq/kmod-ath9k-common/CONTROL/control |  2 +-
 ipkg-ipq/kmod-ath9k/CONTROL/control        |  2 +-
 ipkg-ipq/kmod-cfg80211/CONTROL/control     |  2 +-
 ipkg-ipq/kmod-mac80211/CONTROL/control     |  2 +-
 8 files changed, 43 insertions(+), 30 deletions(-)

diff --git a/drivers/net/wireless/ath/ath11k/mac.c b/drivers/net/wireless/ath/ath11k/mac.c
index 4c88eaba2bae..f965e69e71e4 100644
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -2443,8 +2443,7 @@ static bool ath11k_mac_set_he_txbf_conf(struct ath11k_vif *arvif)
 	struct ath11k *ar = arvif->ar;
 	struct ieee80211_he_cap_elem he_cap_elem = {0};
 	u32 param = WMI_VDEV_PARAM_SET_HEMU_MODE;
-	u32 value = FIELD_PREP(HE_MODE_DL_OFDMA, HE_DL_MUOFDMA_ENABLE) |
-		      FIELD_PREP(HE_MODE_UL_OFDMA, HE_UL_MUOFDMA_ENABLE);
+	u32 value = 0;
 	int ret = 0;
 
 	if (!arvif->vif->bss_conf.he_support)
@@ -2452,22 +2451,30 @@ static bool ath11k_mac_set_he_txbf_conf(struct ath11k_vif *arvif)
 
 	memcpy(&he_cap_elem, &arvif->vif->bss_conf.he_cap_elem, sizeof(he_cap_elem));
 
-	if (he_cap_elem.phy_cap_info[HECAP_PHYDWORD_2] & IEEE80211_HE_PHY_CAP2_UL_MU_FULL_MU_MIMO) {
-		value |= FIELD_PREP(HE_MODE_UL_MUMIMO, HE_UL_MUMIMO_ENABLE);
-	}
-
-	if (he_cap_elem.phy_cap_info[HECAP_PHYDWORD_4] & IEEE80211_HE_PHY_CAP4_SU_BEAMFORMEE) {
-		value |= FIELD_PREP(HE_MODE_SU_TX_BFEE, HE_SU_BFEE_ENABLE);
-	}
-
 	if (he_cap_elem.phy_cap_info[3] & IEEE80211_HE_PHY_CAP3_SU_BEAMFORMER) {
 		value |= FIELD_PREP(HE_MODE_SU_TX_BFER, HE_SU_BFER_ENABLE);
-		if ((he_cap_elem.phy_cap_info[HECAP_PHYDWORD_4] & IEEE80211_HE_PHY_CAP4_MU_BEAMFORMER) &&
-			(arvif->vdev_type == WMI_VDEV_TYPE_AP)) {
+		if ((he_cap_elem.phy_cap_info[HECAP_PHYDWORD_4] &
+		     IEEE80211_HE_PHY_CAP4_MU_BEAMFORMER) &&
+		    (arvif->vdev_type == WMI_VDEV_TYPE_AP)) {
 			value |= FIELD_PREP(HE_MODE_MU_TX_BFER, HE_MU_BFER_ENABLE);
 		}
 	}
 
+	if (arvif->vif->type != NL80211_IFTYPE_MESH_POINT) {
+		value |= FIELD_PREP(HE_MODE_DL_OFDMA, HE_DL_MUOFDMA_ENABLE) |
+			  FIELD_PREP(HE_MODE_UL_OFDMA, HE_UL_MUOFDMA_ENABLE);
+
+		if (he_cap_elem.phy_cap_info[HECAP_PHYDWORD_2] &
+		    IEEE80211_HE_PHY_CAP2_UL_MU_FULL_MU_MIMO) {
+			value |= FIELD_PREP(HE_MODE_UL_MUMIMO, HE_UL_MUMIMO_ENABLE);
+		}
+
+		if (he_cap_elem.phy_cap_info[HECAP_PHYDWORD_4] &
+		    IEEE80211_HE_PHY_CAP4_SU_BEAMFORMEE) {
+			value |= FIELD_PREP(HE_MODE_SU_TX_BFEE, HE_SU_BFEE_ENABLE);
+		}
+	}
+
 	ret = ath11k_wmi_vdev_set_param_cmd(ar, arvif->vdev_id, param, value);
 	if (ret) {
 		ath11k_warn(ar->ab, "failed to set vdev %d HE MU mode: %d\n",
@@ -2499,8 +2506,7 @@ static bool ath11k_mac_vif_recalc_he_txbf(struct ath11k *ar,
 	struct ath11k_pdev_cap *pdev_cap = NULL;
 	struct ieee80211_sta_he_cap *cap_band = NULL;
 	u32 param = WMI_VDEV_PARAM_SET_HEMU_MODE;
-	u32 hemode = FIELD_PREP(HE_MODE_DL_OFDMA, HE_DL_MUOFDMA_ENABLE) |
-		      FIELD_PREP(HE_MODE_UL_OFDMA, HE_UL_MUOFDMA_ENABLE);
+	u32 hemode = 0;
 	int ret;
 
 	if (!vif->bss_conf.he_support)
@@ -2521,11 +2527,6 @@ static bool ath11k_mac_vif_recalc_he_txbf(struct ath11k *ar,
 
 	memcpy(&he_cap_elem, &cap_band->he_cap_elem, sizeof(he_cap_elem));
 
-	if (he_cap_elem.phy_cap_info[HECAP_PHYDWORD_2] & IEEE80211_HE_PHY_CAP2_UL_MU_FULL_MU_MIMO) {
-		if(he_cap->he_cap_elem.phy_cap_info[HECAP_PHYDWORD_2] & IEEE80211_HE_PHY_CAP2_UL_MU_FULL_MU_MIMO)
-			hemode |= FIELD_PREP(HE_MODE_UL_MUMIMO, HE_UL_MUMIMO_ENABLE);
-	}
-
 	if (he_cap_elem.phy_cap_info[HECAP_PHYDWORD_4] & IEEE80211_HE_PHY_CAP4_SU_BEAMFORMEE) {
 		if (he_cap->he_cap_elem.phy_cap_info[HECAP_PHYDWORD_3] & IEEE80211_HE_PHY_CAP3_SU_BEAMFORMER)
 			hemode |= FIELD_PREP(HE_MODE_SU_TX_BFEE, HE_SU_BFEE_ENABLE);
@@ -2534,11 +2535,23 @@ static bool ath11k_mac_vif_recalc_he_txbf(struct ath11k *ar,
 		}
 	}
 
-	if (FIELD_GET(HE_MODE_MU_TX_BFEE, hemode))
-		hemode |= FIELD_PREP(HE_MODE_SU_TX_BFEE, HE_SU_BFEE_ENABLE);
+	if (vif->type != NL80211_IFTYPE_MESH_POINT) {
+		hemode |= FIELD_PREP(HE_MODE_DL_OFDMA, HE_DL_MUOFDMA_ENABLE) |
+			  FIELD_PREP(HE_MODE_UL_OFDMA, HE_UL_MUOFDMA_ENABLE);
 
-	if (FIELD_GET(HE_MODE_MU_TX_BFER, hemode))
-		hemode |= FIELD_PREP(HE_MODE_SU_TX_BFER, HE_SU_BFER_ENABLE);
+		if (he_cap_elem.phy_cap_info[HECAP_PHYDWORD_2] &
+		    IEEE80211_HE_PHY_CAP2_UL_MU_FULL_MU_MIMO) {
+			if(he_cap->he_cap_elem.phy_cap_info[HECAP_PHYDWORD_2] &
+			   IEEE80211_HE_PHY_CAP2_UL_MU_FULL_MU_MIMO)
+				hemode |= FIELD_PREP(HE_MODE_UL_MUMIMO, HE_UL_MUMIMO_ENABLE);
+		}
+
+		if (FIELD_GET(HE_MODE_MU_TX_BFEE, hemode))
+			hemode |= FIELD_PREP(HE_MODE_SU_TX_BFEE, HE_SU_BFEE_ENABLE);
+
+		if (FIELD_GET(HE_MODE_MU_TX_BFER, hemode))
+			hemode |= FIELD_PREP(HE_MODE_SU_TX_BFER, HE_SU_BFER_ENABLE);
+	}
 
 	ret = ath11k_wmi_vdev_set_param_cmd(ar, arvif->vdev_id, param, hemode);
 	if (ret) {
-- 
2.7.4

